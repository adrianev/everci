def package_name=''
def PKEY='Daikin'
def today = new Date()
def c = new GregorianCalendar()
def sdf = new java.text.SimpleDateFormat("yyyyMMddhhmmss")
package_name="package" + BRANCH_NAME
package_name = package_name + ".zip"
package_name = package_name.replace(".", "-" + sdf.format(today) + ".")
def rollback_package_name = "Rollback" + package_name

node {
stage('Parameters'){
properties([[$class: 'ParametersDefinitionProperty', parameterDefinitions:  
[[$class: 'StringParameterDefinition', name: 'TEST_LEVEL', defaultValue: 'RunLocalTests']]]]) 
}

stage('Checkout SCM'){
println BRANCH_NAME
checkout scm
}

stage('Build'){
build job: '../generate-package', parameters: [string(name: 'PKEY', value: PKEY), string(name: 'ENVIRONMENT', value: BRANCH_NAME), string(name: 'PACKAGE_NAME',
value: package_name)] 
sh 'sleep 2'
}

stage('Quality'){ 
try {
	sh 'set +e'
	sh 'sh /home/gnf/DirectorioTrabajoDaikin/Scripts/pmd/bin/run.sh pmd -d $PWD -f xml -l apex -R rulesets/apex/complexity.xml,rulesets/apex/performance.xml,rulesets/apex/style.xml,rulesets/apex/apexunit.xml,rulesets/apex/security.xml,rulesets/apex/braces.xml > pmd.xml 2> errores.txt'
}catch(err){
	echo "something failed"
}

pmd canComputeNew: false, defaultEncoding: '', healthy: '', pattern: 'pmd.xml', unHealthy: ''
		
}


stage('Validate & Test'){
println package_name
build job: 'validate-package', parameters: [string(name: 'PKEY', value: PKEY), string(name: 'ENVIRONMENT', value: BRANCH_NAME), string(name: 'PACKAGE_NAME', 
value: package_name), string(name: 'TEST_LEVEL', value: params.TEST_LEVEL)]
sh 'sleep 2'
}

stage('Promotion'){
timeout(time:1, unit: 'DAYS'){
input message: 'Do you want to proceed to the Deployment?'
}
}

stage('Deploy'){
build job: 'deploy-package', parameters: [string(name: 'PKEY', value: PKEY), string(name: 'ENVIRONMENT', value: BRANCH_NAME), string(name: 'PACKAGE_NAME', 
value: package_name), string(name: 'TEST_LEVEL', value: 'NoTestRun')]
sh 'sleep 2'
}

stage('Validate Rollback Package'){
build job: 'validate-package', parameters: [string(name: 'PKEY', value: PKEY), string(name: 'ENVIRONMENT', value: BRANCH_NAME), string(name: 'PACKAGE_NAME', 
value: rollback_package_name), string(name: 'TEST_LEVEL', value: params.TEST_LEVEL)], propagate: false
}

//Delete pipeline workspace
deleteDir()
}
